# alias ls='ls --color=tty --group-directories-first'
alias l='ls -lh'
alias ll='ls -lahtr'

# Fuzzy search the path
alias fzpath='printf "%s\n" $path | fzf'
alias fzkill='ps x | fzf -m | awk "{print \$1}" | xargs kill'

# Kill all running jobs
alias killalljobs='kill ${${(v)jobstates##*:*:}%=*}'

# Use vim
alias vi=vim
alias vimrc='vi ~/.vimrc'

alias aliasrc='vi $DOTFILES/zsh/aliases'
alias extraenv='vi $HOME/extra_env'

# Docker
alias dc='docker-compose'
alias dv='docker volume ls'
alias dvrm='docker volume rm $(docker volume ls -q)'
alias docker-dang='docker rmi $(docker images -f "dangling=true" -q)'
alias dps='docker ps -a --format "table {{.ID}}\t{{.Names}}\t{{.State}}\t{{.RunningFor}}"'
alias dpps='docker ps -a --format "table {{.ID}}\t{{.Names}}\t{{.State}}\t{{.RunningFor}}\t{{.Ports}}"'
alias rmdocker='docker rm -f $(docker ps -a -q)'
alias ctop='docker run --rm -ti --name=ctop --volume /var/run/docker.sock:/var/run/docker.sock:ro quay.io/vektorlab/ctop:latest'
alias diewhale='pkill Docker && sleep 5 && open /Applications/Docker.app'
## remove dependent children
alias drmi-children='docker rmi $(docker inspect --format="{{.Id}} {{.Parent}}" $(docker images -q) | grep " sha256" | cut -d " " -f1)'

putag(){docker pull "$1" && docker tag "$1" "$2"}

drmi(){
    docker images --format "table {{.ID}}\t{{.Repository}}:{{.Tag}}" | grep "$1" | cut -d " " -f 1 | xargs docker rmi -f
}

function fzdrmi() {
  docker images | sed 1d | fzf -q "$1" --no-sort -m --tac | awk '{ print $3 }' | xargs -r docker rmi -f
}

function fzdrm() {
  docker ps -a | sed 1d | fzf -q "$1" --no-sort -m --tac | awk '{ print $1 }' | xargs -r docker rm
}

dim() {
  if [ -z "$1" ]
    then
    docker images --format "table {{.ID}}\t{{.Size}}\t{{.Repository}}:{{.Tag}}"
  else
    docker images --format "table {{.ID}}\t{{.Size}}\t{{.Repository}}:{{.Tag}}" | grep -i "$1"
  fi
}

# Mac clipboard
alias cpb='pbcopy'


# Git
alias fzgst="git status -s | fzf --no-sort --reverse --preview 'git diff --color=always {+2}'"
alias fzgco="git branch | fzf | xargs git checkout"
alias git_remove_merged="git branch --merged | grep -v master | xargs git branch -D"
alias gst="git status -s"


# zsh
zshrc() {
  vi ~/.zshrc
  exec zsh
}

function pip-install-save {
    for pkg in "$@"
    do
        pip install $pkg && pip freeze | grep -i $pkg >> requirements.txt
    done
}

alias pbnewline="pbpaste | sed 's/\\\n/\n/g'"

# Tar
untar(){
  for var in "$@"
  do
    echo "$var"
    tar xvf "$var" --one-top-level
  done

}

#### random functions ####

# batch remove='docker-kill "cont1|cont2|cont3"'
docker-kill(){
	docker ps --format "table {{.ID}}\t{{.Image}}" | grep -E "($1)" | awk '{print $1}' | xargs -P 30  docker stop
}

# list and grep for the parameter
lg() { ls -la | grep $1 -i; }

view-json-log(){ tail -f $1 | jq --unbuffered -r '.timestamp + "\t" + .level + "\t" + .message'  }

cppath(){
  filePath=$(readlink -f $1)
  echo $filePath | head -c -1 | clip
  echo $filePath
}

dtp (){
    docker tag $1 $2
    docker push $2
}

err2std(){
    echo "2&>1"
}

awkf() {
    awk "{ print \$$1}"
}
