### Profiling tool - add "zprof" add the bottom for profile print
# zmodload zsh/zprof

# ------------ Prevent Ctrl-s Freeze -----------
stty -ixon

# ------------ p10k setup  -----------

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export ZSH=~/.oh-my-zsh
export DOTFILES=$HOME/dotfiles

ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
    git
    docker
    docker-compose
    kubectl
    zsh-autosuggestions
    fast-syntax-highlighting
    golang
)
source $ZSH/oh-my-zsh.sh

# ---------------------- zsh-autosuggestions --------------------------

ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=("${(@)ZSH_AUTOSUGGEST_ACCEPT_WIDGETS:#vi-forward-char}")
ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=("${(@)ZSH_AUTOSUGGEST_ACCEPT_WIDGETS:#forward-char}")
ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS+="forward-char"
ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS+="vi-forward-char"

# ---------------------- Key Bindings --------------------------

bindkey -v                           # make it vim like
bindkey '^ ' autosuggest-execute     # ctrl+space
bindkey '^x^e' edit-command-line     # ctrl+x,ctrl+e
bindkey '.'  insert-last-word      # opt+.


# zsh
# ------------
# autosuggest-accept
# autosuggest-execute
# up-line-or-search
# down-line-or-search

# Movement
# ------------
# forward-char
# backward-char
# forward-word
# backward-word

# Move and Kill
# ------------
# kill-word
# backward-kill-word
# delete-char
# backward-delete-char

# setxkbmap -option caps:escape                     # turn caps into esc

# http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html

# ---------------------- Nvim ------------------

alias vi=nvim

# ---------------------- Sources ---------------

source $DOTFILES/zsh/aliases
source $DOTFILES/env

# ----------------- fzf  -----------------------
[ -f ~/.fzf.zsh ] && \
  source ~/.fzf.zsh && \
  # source $ZSH_CUSTOM/plugins/fzf-tab-completion/zsh/fzf-zsh-completion.sh \

# ---------------- Path update -----------------

path+=$HOME/.local/bin

# ---------------- Less config -----------------

export LESS="$LESS -FRXK"                 # dont be pager when text fit

# ----------------- LS Colors ------------------

unset LSCOLORS
export CLICOLOR=1

# ----------------- NVM ------------------------

### NVM takes 80% of zsh loading time
# export NVM_DIR="$HOME/.nvm"
# [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

# ----------------- Golang ---------------------

export GOROOT=/opt/homebrew/Cellar/go/1.19.4/libexec
export GOPATH=$HOME/workspace

path+=$GOROOT/bin
path+=$GOPATH/bin

# ----------------- Python ---------------------

# export PIP_REQUIRE_VIRTUALENV=true

# ----------------- Java  ----------------------

# export JAVA_HOME="/usr/lib/jvm/java-1.11.0-openjdk-amd64"

# ----------------- pycharm  ---------------------

#[[ "$PYCHARM_SHELL" == 1 ]] && source ~/code/threat-landscape/venv/bin/activate

# ----------------- bat pager  ---------------------

export BAT_STYLE=plain
export BAT_PAGER=never

# ----------------- p10k prompt  ---------------------

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# ----------------- krew (k8s)  ---------------------

export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# ----------------- k9s -----------------------------

export K9S_CONFIG=$HOME/.config/k9s

# ----------------- git -----------------------------

export GIT_PAGER=less

# ----------------- work related vars  --------------

[ -f ~/extra_env ] && source ~/extra_env

# ------------- Iterm2 Shell Integration  -----------

# test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh" || true

# ------------- add gnu execs to PATH (i.e grep) -----------

PATH="$(brew --prefix)/opt/grep/libexec/gnubin:$PATH"

# ----------------- SDK Man  ------------------------

#### THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
# export SDKMAN_DIR="$HOME/.sdkman"
# [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

